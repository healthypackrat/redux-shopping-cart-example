{"version":3,"sources":["reducers/cart.js","constants/ActionTypes.js","reducers/products.js","reducers/index.js","api/shop.js","actions/index.js","components/Product.js","components/ProductItem.js","components/ProductsList.js","containers/ProductsContainer.js","components/Cart.js","containers/CartContainer.js","components/ResetButton.js","containers/ResetContainer.js","containers/App.js","index.js"],"names":["initialState","addedIds","quantityById","state","arguments","length","undefined","action","type","indexOf","productId","concat","Object","toConsumableArray","objectSpread","defineProperty","cart","combineReducers","byId","products","reduce","obj","product","id","inventory","visibleIds","map","getProduct","getVisibleProducts","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","price","toFixed","getCartProducts","quantity","shop","cb","timeout","setTimeout","_products","payload","getAllProducts","dispatch","receiveProducts","checkout","getState","Product","_ref","title","react_default","a","createElement","ProductItem","onAddToCartClicked","style","marginBottom","components_Product","onClick","disabled","ProductsList","children","connect","addToCart","addToCartUnsafe","components_ProductsList","components_ProductItem","key","Cart","onCheckoutClicked","hasProducts","nodes","components_Cart","ResetButton","onResetClicked","components_ResetButton","App","containers_ProductsContainer","containers_CartContainer","containers_ResetContainer","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","apply","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.69f16b51.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_FAILURE\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  addedIds: [],\n  quantityById: {}\n}\n\nconst addedIds = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state\n      }\n      return [ ...state, action.productId ]\n    default:\n      return state\n  }\n}\n\nconst quantityById = (state = initialState.quantityById, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const { productId } = action\n      return { ...state,\n        [productId]: (state[productId] || 0) + 1\n      }\n    default:\n      return state\n  }\n}\n\nexport const getQuantity = (state, productId) =>\n  state.quantityById[productId] || 0\n\nexport const getAddedIds = state => state.addedIds\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState\n    case CHECKOUT_FAILURE:\n      return action.cart\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      }\n  }\n}\n\nexport default cart\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\n","import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n","import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\n\nexport default combineReducers({\n  cart,\n  products\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nexport const getTotal = state =>\n  getAddedIds(state)\n    .reduce((total, id) =>\n      total + getProduct(state, id).price * getQuantity(state, id),\n      0\n    )\n    .toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n","/**\n * Mocking client-server processing\n */\nimport _products from './products.json'\n\nconst TIMEOUT = 100\n\nexport default {\n  getProducts: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT),\n  buyProducts: (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\n}\n","import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Product = ({ price, quantity, title }) => (\n  <div>\n    {title} - &#36;{price}{quantity ? ` x ${quantity}` : null}\n  </div>\n)\n\nProduct.propTypes = {\n  price: PropTypes.number,\n  quantity: PropTypes.number,\n  title: PropTypes.string\n}\n\nexport default Product\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\n\nconst ProductItem = ({ product, onAddToCartClicked }) => (\n  <div style={{ marginBottom: 20 }}>\n    <Product\n      title={product.title}\n      price={product.price}\n      quantity={product.inventory} />\n    <button\n      onClick={onAddToCartClicked}\n      disabled={product.inventory > 0 ? '' : 'disabled'}>\n      {product.inventory > 0 ? 'Add to cart' : 'Sold Out'}\n    </button>\n  </div>\n)\n\nProductItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  }).isRequired,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\nexport default ProductItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProductsList = ({ title, children }) => (\n  <div>\n    <h3>{title}</h3>\n    <div>{children}</div>\n  </div>\n)\n\nProductsList.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired\n}\n\nexport default ProductsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\n\nconst ProductsContainer = ({ products, addToCart }) => (\n  <ProductsList title=\"Products\">\n    {products.map(product =>\n      <ProductItem\n        key={product.id}\n        product={product}\n        onAddToCartClicked={() => addToCart(product.id)} />\n    )}\n  </ProductsList>\n)\n\nProductsContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\n\nconst Cart  = ({ products, total, onCheckoutClicked }) => {\n  const hasProducts = products.length > 0\n  const nodes = hasProducts ? (\n    products.map(product =>\n      <Product\n        title={product.title}\n        price={product.price}\n        quantity={product.quantity}\n        key={product.id}\n      />\n    )\n  ) : (\n    <em>Please add some products to cart.</em>\n  )\n\n  return (\n    <div>\n      <h3>Your Cart</h3>\n      <div>{nodes}</div>\n      <p>Total: &#36;{total}</p>\n      <button onClick={onCheckoutClicked}\n        disabled={hasProducts ? '' : 'disabled'}>\n        Checkout\n      </button>\n    </div>\n  )\n}\n\nCart.propTypes = {\n  products: PropTypes.array,\n  total: PropTypes.string,\n  onCheckoutClicked: PropTypes.func\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { checkout } from '../actions'\nimport { getTotal, getCartProducts } from '../reducers'\nimport Cart from '../components/Cart'\n\nconst CartContainer = ({ products, total, checkout }) => (\n  <Cart\n    products={products}\n    total={total}\n    onCheckoutClicked={() => checkout(products)} />\n)\n\nCartContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  total: PropTypes.string,\n  checkout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  products: getCartProducts(state),\n  total: getTotal(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { checkout }\n)(CartContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ResetButton = ({ onResetClicked }) => (\n  <button onClick={onResetClicked}>Reset</button>\n)\n\nResetButton.propTypes = {\n  onResetClicked: PropTypes.func.isRequired\n}\n\nexport default ResetButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { checkout, getAllProducts } from '../actions'\nimport ResetButton from '../components/ResetButton'\n\nconst ResetContainer = ({ checkout, getAllProducts }) => (\n  <ResetButton onResetClicked={() => { checkout(); getAllProducts() }} />\n)\n\nResetContainer.propTypes = {\n  checkout: PropTypes.func.isRequired,\n  getAllProducts: PropTypes.func.isRequired\n}\n\nexport default connect(\n  null,\n  { checkout, getAllProducts }\n)(ResetContainer)\n","import React from 'react'\nimport ProductsContainer from './ProductsContainer'\nimport CartContainer from './CartContainer'\nimport ResetContainer from './ResetContainer'\n\nconst App = () => (\n  <div>\n    <h2>Shopping Cart Example</h2>\n    <hr/>\n    <ProductsContainer />\n    <hr/>\n    <CartContainer />\n    <hr/>\n    <ResetContainer />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers'\nimport { getAllProducts } from './actions'\nimport App from './containers/App'\n\nconst middleware = [ thunk ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nstore.dispatch(getAllProducts())\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}